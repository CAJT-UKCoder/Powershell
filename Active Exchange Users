param(
	[parameter( Mandatory=$false, Position=0)]
	[string]$ADSite="$(([System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite()).GetDirectoryEntry().Name)",
	[parameter( Mandatory=$false, Position=1)]
	[switch]$Summary
)
$ErrorActionPreference = "silentlycontinue"
# function to get the Exchangeserver from AD site
Function GetExchServer {
	#http://technet.microsoft.com/en-us/library/bb123496(v=exchg.80).aspx on the bottom there is a list of values
	param([array]$Roles,[string]$ADSite)
	Process {
		$valid = @("2","4","16","20","32","36","38","54","64","16385","16439")
		ForEach ($Role in $Roles){
			If (!($valid -contains $Role)) {
				Write-Output -fore red "Please use the following numbers: MBX=2,CAS=4,UM=16,HT=32,Edge=64 multirole servers:CAS/HT=36,CAS/MBX/HT=38,CAS/UM=20,E2k13 MBX=54,E2K13 CAS=16385,E2k13 CAS/MBX=16439"
				Break
			}
		}
		Function GetADSite {
			param([string]$Name)
			If (!($Name)) {
				[string]$Name = ([System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite()).GetDirectoryEntry().Name
			}
			$FilterADSite = "(&(objectclass=site)(Name=$Name))"
			$RootADSite= ([ADSI]'LDAP://RootDse').configurationNamingContext
			$SearcherADSite = New-Object System.DirectoryServices.DirectorySearcher([ADSI]"LDAP://$RootADSite")
			$SearcherADSite.Filter = "$FilterADSite"
			$SearcherADSite.pagesize = 1000
			$ResultsADSite = $SearcherADSite.FindOne()
			$ResultsADSite
		}
		$Filter = "(&(objectclass=msExchExchangeServer)(msExchServerSite=$((GetADSite -Name $ADSite).properties.distinguishedname))(|"
		ForEach ($Role in $Roles){
			$Filter += "(msexchcurrentserverroles=$Role)"
		}
		$Filter += "))"
		$Root= ([ADSI]'LDAP://RootDse').configurationNamingContext
		$Searcher = New-Object System.DirectoryServices.DirectorySearcher([ADSI]"LDAP://$Root")
		$Searcher.Filter = "$Filter"
		$Searcher.pagesize = 1000
		$Results = $Searcher.FindAll()
		$Results
	}
}

# function to sum counters from all servers
function SumCounter ()
{	param($counter,$name)
	$counter.CounterSamples | select -ExpandProperty CookedValue | %{[int]$temp += $_}
	@{ 
	$name = $temp
	}
}

function GetCounterSum ()
{
	$ActiveSync = $((SumCounter -counter (Get-Counter "\MSExchange ActiveSync\Current Requests" -ComputerName ($AvailableServers | %{$_})) -name EAS).values)
	$OWA = $((SumCounter -counter (Get-Counter "\MSExchange OWA\Current Unique Users" -ComputerName  ($AvailableServers | %{$_})) -name OWA).values)
	$OA = $((SumCounter -counter (Get-Counter "\RPC/HTTP Proxy\Current Number of Unique Users" -ComputerName  ($AvailableServers | %{$_})) -name OA).values)
	$RPC = $((SumCounter -counter (Get-Counter "\MSExchange RpcClientAccess\User Count" -ComputerName  ($AvailableServers | %{$_})) -name RPC).values)
	$EWS = $((SumCounter -counter (Get-Counter "\W3SVC_W3WP(*msexchangeservicesapppool)\Active Requests" -ComputerName  ($AvailableServers | %{$_})) -name EWS).values)
	
	$obj = New-Object PSObject 
	$obj | Add-Member NoteProperty -Name "Outlook Web App" -Value $OWA
	$obj | Add-Member NoteProperty -Name "ActiveSync" -Value $ActiveSync
	$obj | Add-Member NoteProperty -Name "OutlookAnywhere" -Value $OA
	$obj | Add-Member NoteProperty -Name "RPC User Count" -Value $RPC
	$obj | Add-Member NoteProperty -Name "EWS User Count" -Value $EWS
	$obj | ft -a
}

[array]$Servers = GetExchServer -Roles 4,36,38,54,16439 -ADSite $ADSite
ForEach ($Server in $servers) {
	If (Test-Connection -ComputerName $Server.properties.name -Count 1 -Quiet) {
		[array]$AvailableServers += $Server
	}
}
Write-Output "Found the following available server:"
$AvailableServers = $AvailableServers | %{$_.properties.name} | sort
$AvailableServers

If ($Summary) {
	GetCounterSum
}
Else {
	[string[]]$counters = "\MSExchange RpcClientAccess\User Count","\MSExchange RpcClientAccess\Connection Count","\RPC/HTTP Proxy\Current Number of Unique Users","\MSExchange OWA\Current Unique Users","\MSExchange ActiveSync\Current Requests","\W3SVC_W3WP(*msexchangeservicesapppool)\Active Requests","\Web Service(_Total)\Current Connections","\Web Service(_Total)\Maximum Connections","\Netlogon(_Total)\Semaphore Timeouts"
	$objcol = @()
	$CounterStats = Get-Counter -ComputerName $AvailableServers -Counter $counters
	ForEach ($Server in $AvailableServers) {
		ForEach ($Sample in $CounterStats.CounterSamples | ?{$_.Path -match $server}) {
			switch -wildcard ($Sample.Path)
			{
			'*RpcClientAccess\User Count'	{$RPC=$Sample.CookedValue}
			'*RpcClientAccess\Conne*'		{$RPCConn=$Sample.CookedValue}
			'*HTTP Proxy*'					{$OA=$Sample.CookedValue}
			'*OWA\Curre*'					{$OWA=$Sample.CookedValue}
			'*ActiveSync*'					{$EAS=$Sample.CookedValue}
			'*icesapppool)\Acti*'			{$EWS=$Sample.CookedValue}
			'*ice(_Total)\Curren*'			{$IIS=$Sample.CookedValue}
			'*ice(_Total)\Maxi*'			{$IISMax=$Sample.CookedValue}
			'*al)\Semaph*'					{$Semaphore=$Sample.CookedValue}
			}
		
			$obj = New-Object PSObject 
			$obj | Add-Member NoteProperty -Name "Server" -Value $($Server)
			$obj | Add-Member NoteProperty -Name "RPC User Count" -Value $(If ($RPC){$RPC}Else{"N/A"})
			$obj | Add-Member NoteProperty -Name "RPC Connection Count" -Value $(If ($RPCConn){$RPCConn}Else{"N/A"})
			$obj | Add-Member NoteProperty -Name "OutlookAnywhere" -Value $(If ($OA){$OA}Else{"N/A"})
			$obj | Add-Member NoteProperty -Name "Outlook Web App" -Value $(If ($OWA){$OWA}Else{"N/A"})
			$obj | Add-Member NoteProperty -Name "ActiveSync" -Value $(If ($EAS){$EAS}Else{"N/A"})
			$obj | Add-Member NoteProperty -Name "EWS" -Value $(If ($EWS){$EWS}Else{"N/A"})
			$obj | Add-Member NoteProperty -Name "IIS Current Connection Count" -Value $(If ($IIS){$IIS}Else{"N/A"})
			$obj | Add-Member NoteProperty -Name "IIS Max Connection Count" -Value $(If ($IISMax){$IISMax}Else{"N/A"})
			$obj | Add-Member NoteProperty -Name "SemaphoreTimeouts" -Value $(If ($Semaphore){$Semaphore}Else{"N/A"})
		}
	$objcol +=$obj
	}
$objcol | ft -a
}
